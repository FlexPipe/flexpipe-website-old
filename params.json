{
  "name": "FlexPipe",
  "tagline": "The flexible pipe to coordinate masses of players to the right spigot.",
  "body": "# FlexPipe [![Build Status](https://ci.janmm14.de/buildStatus/icon?job=public~server~FlexPipe)](https://ci.janmm14.de/job/public~server~FlexPipe)\r\n\r\nBuild upon [BungeeCord](https://github.com/SpigotMC/BungeeCord), FlexPipe is created to provide optimizations, more\r\nstability and security. Originally built for [minotopia.me](https://www.minotopia.me), FlexPipe's changes to BungeeCord\r\nare well tested and properly documented. Due to the patch system, updates of BungeeCord are automatically reflected in\r\nthe newest builds.\r\n\r\n## What is it?\r\nBungeeCord and therefore FlexPipe is a server portal system that can be used to let players teleport\r\nbetween multiple minecraft servers, preferably spigot servers (and derivates). It does so by letting the client think\r\nits a world change while the system disconnects from the previous minecraft server and connects to the target minecraft\r\nserver.\r\n\r\n### Features\r\n[Complete patch list](https://github.com/minotopiame/FlexPipe/tree/master/patches)\r\n\r\nHere is a list of notable changes done in FlexPipe, see individual patches for people who helped out:\r\n\r\n* Join throttle applied as early as possible\r\n* Throttle tab completion as some plugins might get overloaded if its spammed\r\n* Differentiate between pings ad joins in logging, possibility to turn off ping logging\r\n* Allow modification of the module source url\r\n* Option to turn off module downloading / updating\r\n* Tweaking netty values to be optimal\r\n* Ability to edit bungeecord messages without modifying the jar\r\n* Resolve possible deadlock\r\n* Little optimizations\r\n* Lower log output on invalid packet order\r\n* Close connections without a half-second delay\r\n* Keep compatibility with older pinging tools for version 1.8\r\n* Validate compressed packets against compression threshold\r\n* Be more strict when validating chat\r\n* API for unusual behaviour detection\r\n* Be faster than optimized reflection with dynamically created classes:\r\n** Faster event handling\r\n** Faster packet interception\r\n* Don't copy memory where possible\r\n* Massively reduce memory usage when scoreboard plugins create many teams\r\n* Allow the console to tab-complete\r\n\r\n# Download\r\nYou can download the newest builds from my [Jenkins](https://ci.janmm14.de/job/public~server~FlexPipe). The latest build\r\nis always the recommended build, except otherwise stated.\r\n\r\n# Usage\r\nSimply download your FlexPipe.jar and start it with java once. Then you can find additional configuration options in\r\nyour config.yml file. I suggest to turn on automatic module updates to recieve module updates automatically after\r\ndownloading a new FlexPipe.jar\r\n\r\n# Compilation\r\nThis project uses maven to handle its dependencies.\r\n\r\nThe compilation of FlexPipe is fairly easy. At first you need to clone this repository with git. Then you need to\r\nexecute ```./reset-apply-build.sh``` in a bash environment. You can get it on windows mostly by right-clicking in the\r\nfile explorer and selecting \"Git Bash\". The final files are copied into the ```target``` folder.\r\n\r\n**Be careful** if you have done changes in the BungeeCord folder which are not saved as a patch yet. In that case, **never** run ```./reset-apply-build.sh``` or ```./reset.sh```, these will **reset** your changes to BungeeCord. You should then only run ```./build.sh``` instead to compile flexpipe.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}